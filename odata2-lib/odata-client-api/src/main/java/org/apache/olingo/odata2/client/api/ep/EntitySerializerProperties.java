/*******************************************************************************
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 ******************************************************************************/
package org.apache.olingo.odata2.client.api.ep;

import java.net.URI;

// TODO: Auto-generated Javadoc
/**
 * {@link EntitySerializerProperties} contains all additional properties which are necessary to <b>write
 * (serialize)</b> an {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} into an specific format (e.g.
 * <code>XML</code> or <code>JSON</code> or ...).
 */
public class EntitySerializerProperties {

  /** The service root. */
  private URI serviceRoot;
  
  /** The include metadata. */
  private boolean includeMetadata = false;
  
  /** The validating facets. */
  private boolean validatingFacets = true;
  
  /** The is key auto generated. */
  private boolean isKeyAutoGenerated = false;
  
  /**
   * Instantiates a new entity serializer properties.
   */
  private EntitySerializerProperties() {}
  
  /**
   * Set true or false to include metadata.
   *
   * @return boolean
   */
  public boolean isIncludeMetadata() {
    return includeMetadata;
  }

  /**
   * Set true or false for auto key generation.
   *
   * @return boolean
   */
  public final boolean isKeyAutoGenerated() {
    return isKeyAutoGenerated;
  }

  /**
   * Gets the service root.
   * @return the service root
   */
  public final URI getServiceRoot() {
    return serviceRoot;
  }

  /**
   * Service root.
   *
   * @param serviceRoot the service root
   * @return EntitySerializerPropertiesBuilder
   */
  public static EntitySerializerPropertiesBuilder serviceRoot(final URI serviceRoot) {
    return new EntitySerializerPropertiesBuilder().serviceRoot(serviceRoot);
  }

  /**
   * Checks if is validating facets.
   *
   * @return boolean
   */
  public boolean isValidatingFacets() {
    return validatingFacets;
  }

  /**
   * This class builds the Entity Serializer Properties.
   */
  public static class EntitySerializerPropertiesBuilder {
    
    /** The properties. */
    private final EntitySerializerProperties properties = new EntitySerializerProperties();

    /**
     * Include metadata.
     *
     * @param includeMetadata the include metadata
     * @return EntitySerializerPropertiesBuilder
     */
    public EntitySerializerPropertiesBuilder
      includeMetadata(final boolean includeMetadata) {
    properties.includeMetadata = includeMetadata;
    return this;
   }

   

    /**
     * Service root.
     *
     * @param serviceRoot the service root
     * @return the entity serializer properties builder
     */
    public final EntitySerializerPropertiesBuilder serviceRoot(final URI serviceRoot) {
      properties.serviceRoot = serviceRoot;
      return this;
    }
    
    /**
     * Checks if is key auto generated.
     *
     * @param isKeyAutoGenerated the is key auto generated
     * @return the entity serializer properties builder
     */
    public final EntitySerializerPropertiesBuilder isKeyAutoGenerated
    (boolean isKeyAutoGenerated) {
      properties.isKeyAutoGenerated = isKeyAutoGenerated;
      return this;
    }

    /**
     * Build properties object.
     * @return assembled properties object
     */
    public final EntitySerializerProperties build() {
      return properties;
    }

    /**
     * Validating facets.
     *
     * @param validatingFacets the validating facets
     * @return EntitySerializerPropertiesBuilder
     */
    public EntitySerializerPropertiesBuilder validatingFacets(final boolean validatingFacets) {
      properties.validatingFacets = validatingFacets;
      return this;
    }

    /**
     * From properties.
     *
     * @param properties the properties
     * @return EntitySerializerPropertiesBuilder
     */
    public EntitySerializerPropertiesBuilder fromProperties
    (final EntitySerializerProperties properties) {
      this.properties.validatingFacets = properties.validatingFacets;
      this.properties.includeMetadata = properties.includeMetadata;
      this.properties.isKeyAutoGenerated = properties.isKeyAutoGenerated;
      return this;
    }

  }

  /**
   * From properties.
   *
   * @param properties the properties
   * @return EntitySerializerPropertiesBuilder
   */
  public static EntitySerializerPropertiesBuilder fromProperties
  (final EntitySerializerProperties properties) {
    final EntitySerializerPropertiesBuilder builder =
        EntitySerializerProperties.serviceRoot(properties.getServiceRoot());
    return builder.fromProperties(properties);
  }
}
